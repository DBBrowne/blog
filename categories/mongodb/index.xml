<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MongoDB on Duncan Browne</title>
    <link>https://DBBrowne.github.io/blog/categories/mongodb/</link>
    <description>Recent content in MongoDB on Duncan Browne</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>gh@dbb.tools (Duncan Browne)</managingEditor>
    <webMaster>gh@dbb.tools (Duncan Browne)</webMaster>
    <copyright>Â© Duncan Browne</copyright>
    <lastBuildDate>Sun, 27 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://DBBrowne.github.io/blog/categories/mongodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An adventure in automated testing with Jest and Mongoose</title>
      <link>https://DBBrowne.github.io/blog/blog/an-adventure-in-automated-testing-with-jest-and-mongoose/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      <author>gh@dbb.tools (Duncan Browne)</author>
      <guid>https://DBBrowne.github.io/blog/blog/an-adventure-in-automated-testing-with-jest-and-mongoose/</guid>
      <description>An adventure in automated testing with Jest and Mongoose  Beginner pitfalls with building automated tests that compare JS objects with mongoose objects.
 With thanks to Jon Sharpe, who kindly pointed me to the problem and solution here.
TLDR Mongoose dates != JS Dates Mongoose objects != JS objects. Use expect(mongooseObject.toJSON()).toMatchObject(jsObject) If you have dates, fix up your mongooseObject.toJSON() by replacing any date properties with mongooseObjectJson.dateProperty = mongooseObject.dateProperty.toJSON() Keep your dependencies up to date.</description>
    </item>
    
  </channel>
</rss>
